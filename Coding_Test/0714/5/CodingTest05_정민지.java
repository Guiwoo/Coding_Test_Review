/*
    5번 문제를 보고 아 이거 배낭 문제당! 했는데요. 그래서 다른 문제들을 넘겨두고
    이 문제를 도전하다가 모든 시간이 끝이 나버렸습니다.
    저는 전에 IDE를 사용하다가 잘못 창을 꺼버렸던 기억이 있어서 웬만하면
    프로그래머스 시험 환경에서 테스트를 진행하는데요.
    근데 한 케이스라도 제대로 통과를 했다면 제출을 해서 코드가 남았을 텐데
    정말이지.. 한 케이스도 통과하지 못해서 아무런 코드가 남지 않았습니다..
    아무튼 이 문제는 배낭 문제의 변형이구나 하는 생각을 먼저 했고요.

    dp니까 0-1 배낭문제겠구나 했습니다. 근데 배낭이 두 개..? 하면서
    가방이 두 개니까.. 3차원으로 i와 1번 가방, 2번 가방의 상태를 담는 dp를 사용하면 되려나..?
    그런데 가치를 고려해야 하는데 무게랑 가치 배열을 묶어버려야겠다.
    근데 일단 재귀적으로 구현을 해서 모든 케이스를 탐색해서..
    1번 가방에 얼마나 더 담을 수 있는지와 2번 가방에 얼마나 더 담을 수 있는지를 체크해가며
    더 많은 가치를 가져갈 수 있도록... 근데 점화식을 어떻게 세우지..?

    이러다가 일단 코딩을 시작했는데 그러다 재귀를 이상하게 짜서 무한 루프에 한 번 빠지고
    그러다가 어.. 아니야 접근을 좀 바꾸자 하며 노트에 막 복잡하게 그림과 점화식을 세워보다가
    시간이 끝났습니다. ㅎㅎ..

 */
import java.util.*;
class Solution {

}
